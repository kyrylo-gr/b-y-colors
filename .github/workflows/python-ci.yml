# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: UploadPyPi

env:
  config_path: python/bycolors/__config__.py

on:
  push:
    branches: ['main']

jobs:
  run-tests:
    runs-on: ubuntu-latest
    env:
      TestingOn: GitHub

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          cd python
          pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          cd python
          pytest .

  version-check:
    runs-on: ubuntu-latest
    needs: run-tests
    outputs:
      publish: ${{ steps.compare.outputs.publish }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current version
        id: get_current_version
        run: |
          current_version=$(grep '__version__' $config_path | cut -d'"' -f2)
          echo "Current version: $current_version"
          echo "current_version=$current_version" >> "$GITHUB_OUTPUT"

      - name: Get previous version
        id: get_previous_version
        run: |
          git fetch origin
          echo "Config file:"
          git show origin/main:$config_path
          previous_version=$(git show origin/main:$config_path | grep '__version__' | cut -d'"' -f2)
          echo "Previous version: $previous_version"
          echo "previous_version=$previous_version" >> "$GITHUB_OUTPUT"

      - name: Compare versions
        id: compare
        run: |
          echo "Current version: ${{ steps.get_current_version.outputs.current_version }}"
          echo "Previous version: ${{ steps.get_previous_version.outputs.previous_version }}"

          if [ "${{ steps.get_current_version.outputs.current_version }}" = "${{ steps.get_previous_version.outputs.previous_version }}" ]; then
              echo "Version is the same as on the previous release"
              echo "publish=false" >> "$GITHUB_OUTPUT"
          else
            echo "Ok: Version is different from the previous version"
            echo "publish=true" >> "$GITHUB_OUTPUT"
          fi

  publish:
    runs-on: ubuntu-latest
    needs: version-check
    if: ${{ needs.version-check.outputs.publish == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          cd python
          python setup.py sdist bdist_wheel
          twine upload dist/*
